/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movievis;

/**
 *
 * @author Radu
 */
public class LayouterController extends javax.swing.JPanel {

    private NetworkLayouter layouter;
    /**
     * Creates new form LayouterController
**/
    public LayouterController(){
        initComponents();
    }
    
    
    public void setNetworkLayouter(NetworkLayouter layouter){
        this.layouter = layouter;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        simulateCheckbox = new javax.swing.JCheckBox();
        maxStepEdit = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        attractionSpinner = new javax.swing.JSpinner();
        repulsionSpinner = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();

        simulateCheckbox.setSelected(true);
        simulateCheckbox.setText("Simulate");
        simulateCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simulateCheckboxActionPerformed(evt);
            }
        });

        maxStepEdit.setValue(10);
        maxStepEdit.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                maxStepEditStateChanged(evt);
            }
        });

        jLabel1.setText("Layouter");

        jLabel2.setText("Max step");

        jLabel3.setText("Attraction");

        attractionSpinner.setValue(10);
        attractionSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                attractionSpinnerStateChanged(evt);
            }
        });

        repulsionSpinner.setValue(10);
        repulsionSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                repulsionSpinnerStateChanged(evt);
            }
        });

        jLabel4.setText("Repulsion");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(simulateCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(maxStepEdit, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(repulsionSpinner, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(attractionSpinner, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(simulateCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maxStepEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attractionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(repulsionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void simulateCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simulateCheckboxActionPerformed
       if (simulateCheckbox.isSelected())
           layouter.play();
       else
           layouter.pause();
    }//GEN-LAST:event_simulateCheckboxActionPerformed

    private void maxStepEditStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_maxStepEditStateChanged
        layouter.setMaxStep((int)maxStepEdit.getValue());
    }//GEN-LAST:event_maxStepEditStateChanged

    private void attractionSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_attractionSpinnerStateChanged
        int val = (int)attractionSpinner.getValue();
        if (val >= 0)        
        layouter.setAttractionForce(val);
    }//GEN-LAST:event_attractionSpinnerStateChanged

    private void repulsionSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_repulsionSpinnerStateChanged
        int val = (int)repulsionSpinner.getValue();
        if (val >= 0)
            layouter.setRepulsionForce(val);
    }//GEN-LAST:event_repulsionSpinnerStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner attractionSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSpinner maxStepEdit;
    private javax.swing.JSpinner repulsionSpinner;
    private javax.swing.JCheckBox simulateCheckbox;
    // End of variables declaration//GEN-END:variables
}
